{
  "openapi": "3.1.0",
  "info": {
    "title": "E-Commerce API",
    "description": "A simple e-commerce API with admin and customer roles. Endpoints are protected by JWT Bearer tokens. Role-based access:\n- Public: Product listing and retrieval, registration, login, health check.\n- Customer: Create and view own orders.\n- Admin: Manage products (CRUD), view all orders, update order status.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Register a new user",
        "description": "Register a new user (role: admin or customer). Public endpoint, no authentication required.",
        "operationId": "register_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "400": {
            "description": "Username or email already registered"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login user",
        "description": "Login and get JWT token. Public endpoint, no authentication required.",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OAuth2PasswordRequestForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect username or password"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products-public"
        ],
        "summary": "List all products",
        "description": "List all available products (public). No authentication required. Supports pagination with skip and limit query params.",
        "operationId": "list_products_products_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductOut"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products-admin"
        ],
        "summary": "Create product",
        "description": "Create a new product (admin only). Requires authentication with admin role.",
        "operationId": "create_product_products_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductOut"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions - admin only"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/products/{product_id}": {
      "get": {
        "tags": [
          "products-public"
        ],
        "summary": "Get a product",
        "description": "Get a specific product by ID (public). No authentication required.",
        "operationId": "get_product_products__product_id__get",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MongoDB ObjectId string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductOut"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "products-admin"
        ],
        "summary": "Update product",
        "description": "Update a product (admin only). Only updates provided fields. Requires authentication with admin role.",
        "operationId": "update_product_products__product_id__put",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MongoDB ObjectId string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductOut"
                }
              }
            }
          },
          "400": {
            "description": "No fields to update"
          },
          "403": {
            "description": "Not enough permissions - admin only"
          },
          "404": {
            "description": "Product not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "products-admin"
        ],
        "summary": "Delete product",
        "description": "Delete a product (admin only). Requires authentication with admin role.",
        "operationId": "delete_product_products__product_id__delete",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MongoDB ObjectId string"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "403": {
            "description": "Not enough permissions - admin only"
          },
          "404": {
            "description": "Product not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "List orders",
        "description": "List orders: all for admin, own for customer. Requires authentication. Supports pagination with skip and limit query params.",
        "operationId": "list_orders_orders_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderOut"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Could not validate credentials"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "orders-customer"
        ],
        "summary": "Create order",
        "description": "Create a new order (customer only). Updates stock atomically. Requires authentication with customer role.",
        "operationId": "create_order_orders_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderOut"
                }
              }
            }
          },
          "400": {
            "description": "Insufficient stock or order failed due to concurrent update"
          },
          "403": {
            "description": "Not enough permissions - customer only"
          },
          "404": {
            "description": "Product not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/orders/{order_id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get order",
        "description": "Get a specific order: own for customer, any for admin. Requires authentication.",
        "operationId": "get_order_orders__order_id__get",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MongoDB ObjectId string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderOut"
                }
              }
            }
          },
          "401": {
            "description": "Could not validate credentials"
          },
          "403": {
            "description": "Not enough permissions"
          },
          "404": {
            "description": "Order not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/orders/{order_id}/status": {
      "patch": {
        "tags": [
          "orders-admin"
        ],
        "summary": "Update order status",
        "description": "Update order status (admin only). Requires authentication with admin role.",
        "operationId": "update_order_status_orders__order_id__status_patch",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MongoDB ObjectId string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderStatusUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderOut"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions - admin only"
          },
          "404": {
            "description": "Order not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health check",
        "description": "Check if the API is running. Public endpoint, no authentication required.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "healthy"
                      ],
                      "description": "API health status"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Current timestamp in ISO format"
                    }
                  },
                  "required": [
                    "status",
                    "timestamp"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserCreate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "description": "Unique username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Unique email address"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 72,
            "description": "Password for the user"
          },
          "role": {
            "type": "string",
            "default": "customer",
            "enum": [
              "admin",
              "customer"
            ],
            "description": "User role"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      },
      "UserOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID (MongoDB ObjectId)"
          },
          "username": {
            "type": "string",
            "description": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "customer"
            ],
            "description": "User role"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "role"
        ]
      },
      "Token": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "JWT access token"
          },
          "token_type": {
            "type": "string",
            "default": "bearer",
            "description": "Token type"
          }
        },
        "required": [
          "access_token"
        ]
      },
      "ProductCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1000,
            "description": "Product description"
          },
          "price": {
            "type": "number",
            "exclusiveMinimum": 0,
            "description": "Product price (rounded to 2 decimals)"
          },
          "stock": {
            "type": "integer",
            "minimum": 0,
            "description": "Available stock quantity"
          }
        },
        "required": [
          "name",
          "description",
          "price",
          "stock"
        ]
      },
      "ProductUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Updated product name (optional)"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1000,
            "description": "Updated product description (optional)"
          },
          "price": {
            "type": "number",
            "exclusiveMinimum": 0,
            "description": "Updated product price (optional, rounded to 2 decimals)"
          },
          "stock": {
            "type": "integer",
            "minimum": 0,
            "description": "Updated stock quantity (optional)"
          }
        }
      },
      "ProductOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Product ID (MongoDB ObjectId)"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "price": {
            "type": "number",
            "description": "Product price"
          },
          "stock": {
            "type": "integer",
            "description": "Available stock quantity"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "price",
          "stock"
        ]
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string",
            "description": "Product ID (MongoDB ObjectId)"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "description": "Quantity of the product"
          }
        },
        "required": [
          "product_id",
          "quantity"
        ]
      },
      "OrderCreate": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "description": "List of products in the order"
          }
        },
        "required": [
          "products"
        ]
      },
      "OrderOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Order ID (MongoDB ObjectId)"
          },
          "customer_id": {
            "type": "string",
            "description": "Customer ID"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "string"
                },
                "product_name": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "price": {
                  "type": "number"
                },
                "subtotal": {
                  "type": "number"
                }
              }
            },
            "description": "List of ordered products with details"
          },
          "total": {
            "type": "number",
            "description": "Total order amount (rounded to 2 decimals)"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "description": "Order status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Order creation timestamp"
          }
        },
        "required": [
          "id",
          "customer_id",
          "products",
          "total",
          "status"
        ]
      },
      "OrderStatusUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "description": "New order status"
          }
        },
        "required": [
          "status"
        ]
      },
      "HTTPValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ]
      },
      "OAuth2PasswordRequestForm": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Bearer token for authentication. Roles checked via dependencies: admin_required, customer_required, get_current_active_user."
      }
    }
  }
}